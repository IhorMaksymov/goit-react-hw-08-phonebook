{"version":3,"file":"static/js/353.69470251.chunk.js","mappings":"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","sources":["components/Section/SectionStyled.jsx","components/Section/Section.jsx","components/ContactForm/ContactFormStyled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","pages/pagesStyled/ContactsStuled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;","import PropTypes from 'prop-types';\n\nimport { Title } from './SectionStyled';\n\nconst Section = ({ title, children }) => {\n    return (\n        <>\n            <Title>{title}</Title>\n            {children}\n        </>\n    )\n};\n\nexport default Section;\n\nSection.propTtypes = {\n    title: PropTypes.string.isRequired,\n}","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FieldForm = styled(Form)`\n    padding: ${p => p.theme.space[4]}px;\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.3);\n    border-radius: ${p => p.theme.radii.average};\n    padding: ${p => p.theme.space[4]}px;\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled(Field)`\n    margin-top: ${p => p.theme.space[2]}px;\n    border: none;\n    outline: none;\n    border: 1px solid rgba(0,0,0,0.2);\n    border-radius: ${p => p.theme.radii.average};\n    &:hover, :focus {\n       box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.2); \n    };\n`;\n\nexport const BtnSub = styled.button`\n    background: ${p => p.theme.colors.btnColor};\n    color: ${p => p.theme.colors.baseWhite};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    font-size: ${p => p.theme.fontSizes.m};\n    border: none;\n    border-radius: ${p => p.theme.radii.average};\n    font-size: ${p => p.theme.fontSizes.s};\n    padding: ${p => p.theme.space[2]}px;\n    text-transform: uppercase;\n    &:hover {\n    box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.3);\n    }\n`; ","const getContacts = state => state.contacts.items;\n\nconst getIsLoading = state => state.contacts.isLoading;\n\nconst getError = state => state.contacts.error;\n\nconst getFilter = state => state.contacts.filter;\n\nexport { getContacts, getIsLoading, getError, getFilter }","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FieldForm, Label, Input, BtnSub } from './ContactFormStyled';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.string().required(),\n});\n\nconst ContactForm = () => {\n\n    const contacts = useSelector(getContacts)\n    const dispatch = useDispatch();\n\n    const handleSubmit = (value, { resetForm }) => {\n        includesContact(value.name) ?\n            alert(`${value.name} is alredy in your contacts`) :\n            dispatch(addContact(value));\n        resetForm();\n    };\n\n    const includesContact = (contactName) => {\n        return contacts.find(contact => contact.name.toLowerCase() === contactName.toLowerCase());\n    };\n\n    return (\n        <Formik\n            initialValues={{ name: '', number: '' }}\n            onSubmit={handleSubmit}\n            validationSchema={schema}\n        >\n            <FieldForm autoComplete='off'>\n                <Label htmlFor=''>\n                    Name\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </Label>\n                <Label htmlFor=''>\n                    Number\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </Label>\n                <BtnSub type='submit'>Add contact</BtnSub>\n            </FieldForm>\n        </Formik>\n    )\n};\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Input = styled.input`\n    margin-top: ${p => p.theme.space[2]}px;\n    border: none;\n    outline: none;\n    width: 270px;\n    border: 1px solid rgba(0,0,0,0.2);\n    border-radius: ${p => p.theme.radii.average};\n    &:hover, :focus {\n       box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.2); \n    };\n`;","import { useDispatch } from 'react-redux';\n\nimport { Label, Input } from './FilterStyled';\nimport { valueContactFilter } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        const filter = event.target.value;\n        dispatch(valueContactFilter(filter));\n    }\n\n    return (\n        <Label>\n            Find contacts by name\n            <Input type='text' onChange={handleChange} />\n        </Label>\n    )\n}\n\nexport default Filter;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Text = styled.p`\n    margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const Btn = styled.button`\n    background: ${p => p.theme.colors.btnColor};\n    color: ${p => p.theme.colors.baseWhite};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    font-size: ${p => p.theme.fontSizes.m};\n    border: none;\n    border-radius: ${p => p.theme.radii.average};\n    font-size: ${p => p.theme.fontSizes.s};\n    padding: ${p => p.theme.space[2]}px;\n    text-transform: uppercase;\n    &:hover {\n    box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.3);\n    }\n`;","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { List, Item, Text, Btn } from './ContactListStyled';\n\nimport { getContacts, getFilter } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\n\nconst ContactList = () => {\n    \n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    \n    const visibleContact = () => {\n        const normalizeContact = filter.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeContact));\n    }\n\n    const filtredContact = visibleContact();\n\n    return (\n        <List>\n            {filtredContact.map(({ id, name, number }) => \n                <Item key={id}>\n                    <Text>{name}</Text>\n                    <Text>{number}</Text>\n                    <Btn type='button' onClick={() => dispatch(deleteContact(id))} >Delete</Btn>\n                </Item>\n            )}\n        </List>\n    )\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        })\n    )\n};","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-around;\n`; \n\nconst Wrapp = styled.div`\n    min-width: 300px;\n`;\n\nexport { Container, Wrapp };","import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport Section from \"components/Section\";\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\n\nimport { Container, Wrapp } from \"./pagesStyled/ContactsStuled\";\n\nimport { fetchContacts } from \"redux/contacts/contactsOperation\";\n\nconst Contacts = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch])\n    return (\n        <Container>\n            <div>\n                <Section title={'Phonebook'}>\n                <ContactForm />\n            </Section>\n            </div>\n            <Wrapp>\n                <Section title={'Contacts'}>\n                <Filter />\n                <ContactList />\n            </Section>\n            </Wrapp>\n        </Container>\n    )\n}\n\nexport default Contacts;"],"names":["Title","styled","p","theme","space","Section","title","children","propTtypes","PropTypes","FieldForm","Form","radii","average","Label","Input","Field","BtnSub","colors","btnColor","baseWhite","fontWeights","bold","fontSizes","m","s","getContacts","state","contacts","items","getFilter","filter","schema","yup","shape","name","required","number","useSelector","dispatch","useDispatch","includesContact","contactName","find","contact","toLowerCase","initialValues","onSubmit","value","resetForm","alert","addContact","validationSchema","autoComplete","htmlFor","type","pattern","onChange","event","target","valueContactFilter","List","Item","Text","Btn","filtredContact","normalizeContact","includes","visibleContact","map","id","onClick","deleteContact","Container","Wrapp","useEffect","fetchContacts"],"sourceRoot":""}